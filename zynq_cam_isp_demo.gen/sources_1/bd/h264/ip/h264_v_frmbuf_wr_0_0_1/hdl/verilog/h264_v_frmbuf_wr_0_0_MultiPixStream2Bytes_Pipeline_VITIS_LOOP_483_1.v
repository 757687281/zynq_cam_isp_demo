// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module h264_v_frmbuf_wr_0_0_MultiPixStream2Bytes_Pipeline_VITIS_LOOP_483_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        img_dout,
        img_empty_n,
        img_read,
        empty_47,
        empty,
        trunc_ln470_2,
        bytePlanes_01_din,
        bytePlanes_01_full_n,
        bytePlanes_01_write,
        demorgan,
        icmp_ln473,
        icmp_ln488_6,
        icmp_ln488_5,
        icmp_ln488_4,
        icmp_ln488_3,
        icmp_ln488_2,
        icmp_ln488_1,
        sub25_cast21,
        icmp_ln488,
        bytePlanes_12_din,
        bytePlanes_12_full_n,
        bytePlanes_12_write,
        p_out,
        p_out_ap_vld,
        p_out1,
        p_out1_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 8'd1;
parameter    ap_ST_fsm_pp0_stage1 = 8'd2;
parameter    ap_ST_fsm_pp0_stage2 = 8'd4;
parameter    ap_ST_fsm_pp0_stage3 = 8'd8;
parameter    ap_ST_fsm_pp0_stage4 = 8'd16;
parameter    ap_ST_fsm_pp0_stage5 = 8'd32;
parameter    ap_ST_fsm_pp0_stage6 = 8'd64;
parameter    ap_ST_fsm_pp0_stage7 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [23:0] img_dout;
input   img_empty_n;
output   img_read;
input  [7:0] empty_47;
input  [7:0] empty;
input  [11:0] trunc_ln470_2;
output  [63:0] bytePlanes_01_din;
input   bytePlanes_01_full_n;
output   bytePlanes_01_write;
input  [0:0] demorgan;
input  [0:0] icmp_ln473;
input  [0:0] icmp_ln488_6;
input  [0:0] icmp_ln488_5;
input  [0:0] icmp_ln488_4;
input  [0:0] icmp_ln488_3;
input  [0:0] icmp_ln488_2;
input  [0:0] icmp_ln488_1;
input  [11:0] sub25_cast21;
input  [0:0] icmp_ln488;
output  [63:0] bytePlanes_12_din;
input   bytePlanes_12_full_n;
output   bytePlanes_12_write;
output  [7:0] p_out;
output   p_out_ap_vld;
output  [7:0] p_out1;
output   p_out1_ap_vld;

reg ap_idle;
reg img_read;
reg bytePlanes_01_write;
reg bytePlanes_12_write;
reg p_out_ap_vld;
reg p_out1_ap_vld;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
reg   [0:0] icmp_ln483_reg_648;
reg   [0:0] or_ln488_1_reg_672;
reg    ap_predicate_op59_read_state3;
reg    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_subdone;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage7;
reg   [0:0] or_ln488_6_reg_717;
reg    ap_predicate_op100_read_state8;
reg    ap_block_state8_pp0_stage7_iter0;
reg    ap_block_pp0_stage7_subdone;
reg    bytePlanes_01_blk_n;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg    img_blk_n;
reg   [0:0] or_ln488_reg_663;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
reg   [0:0] or_ln488_2_reg_691;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
reg   [0:0] or_ln488_3_reg_700;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
reg   [0:0] or_ln488_4_reg_709;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
reg   [0:0] or_ln488_5_reg_713;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage0;
reg   [0:0] or_ln488_7_reg_721;
reg    bytePlanes_12_blk_n;
reg   [7:0] tmp_V_1_0_reg_214;
reg   [7:0] tmp_V_0_reg_224;
reg   [7:0] tmp_V_1_1_reg_234;
reg   [7:0] tmp_V_18_reg_245;
reg   [7:0] tmp_V_1_2_reg_256;
reg   [7:0] tmp_V_2_reg_267;
reg   [7:0] tmp_V_1_3_reg_278;
reg   [7:0] tmp_V_3_reg_289;
reg   [7:0] tmp_V_1_4_reg_300;
reg   [7:0] tmp_V_4_reg_311;
reg   [7:0] tmp_V_1_5_reg_322;
reg   [7:0] tmp_V_5_reg_333;
reg    ap_predicate_op48_read_state2;
reg    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_state10_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
reg    ap_predicate_op75_read_state5;
reg    ap_block_state5_pp0_stage4_iter0;
reg    ap_block_pp0_stage4_11001;
reg    ap_block_pp0_stage2_11001;
reg    ap_predicate_op86_read_state6;
reg    ap_block_state6_pp0_stage5_iter0;
reg    ap_block_pp0_stage5_11001;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_predicate_op107_read_state9;
reg    ap_block_state9_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg    ap_predicate_op67_read_state4;
reg    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_11001;
reg    ap_predicate_op93_read_state7;
reg    ap_block_state7_pp0_stage6_iter0;
reg    ap_block_pp0_stage6_11001;
wire   [0:0] icmp_ln483_fu_435_p2;
reg   [0:0] icmp_ln483_reg_648_pp0_iter1_reg;
wire   [0:0] cmp26_fu_451_p2;
reg   [0:0] cmp26_reg_652;
wire   [0:0] or_ln488_fu_457_p2;
wire   [7:0] trunc_ln145_fu_468_p1;
wire   [0:0] or_ln488_1_fu_472_p2;
wire   [7:0] trunc_ln145_2_fu_484_p1;
wire   [0:0] or_ln488_2_fu_488_p2;
wire   [7:0] trunc_ln145_3_fu_492_p1;
wire   [0:0] or_ln488_3_fu_496_p2;
wire   [7:0] trunc_ln145_4_fu_500_p1;
wire   [0:0] or_ln488_4_fu_504_p2;
wire   [0:0] or_ln488_5_fu_508_p2;
wire   [0:0] or_ln488_6_fu_512_p2;
wire   [0:0] or_ln488_7_fu_516_p2;
wire   [7:0] trunc_ln145_6_fu_520_p1;
wire   [7:0] trunc_ln145_8_fu_524_p1;
wire   [7:0] trunc_ln145_11_fu_528_p1;
reg    ap_block_pp0_stage7_11001;
wire   [7:0] trunc_ln145_13_fu_532_p1;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage1_subdone;
reg   [7:0] ap_phi_reg_pp0_iter0_tmp_V_1_0_reg_214;
reg   [7:0] ap_phi_reg_pp0_iter0_tmp_V_0_reg_224;
reg   [7:0] ap_phi_reg_pp0_iter0_tmp_V_1_1_reg_234;
reg   [7:0] ap_phi_reg_pp0_iter0_tmp_V_18_reg_245;
reg   [7:0] ap_phi_reg_pp0_iter0_tmp_V_1_2_reg_256;
reg   [7:0] ap_phi_reg_pp0_iter0_tmp_V_2_reg_267;
reg   [7:0] ap_phi_reg_pp0_iter0_tmp_V_1_3_reg_278;
reg   [7:0] ap_phi_reg_pp0_iter0_tmp_V_3_reg_289;
reg   [7:0] ap_phi_reg_pp0_iter0_tmp_V_1_4_reg_300;
reg   [7:0] ap_phi_reg_pp0_iter0_tmp_V_4_reg_311;
reg   [7:0] ap_phi_reg_pp0_iter0_tmp_V_1_5_reg_322;
reg   [7:0] ap_phi_reg_pp0_iter1_tmp_V_1_5_reg_322;
reg   [7:0] ap_phi_reg_pp0_iter0_tmp_V_5_reg_333;
reg   [7:0] ap_phi_reg_pp0_iter1_tmp_V_5_reg_333;
wire   [7:0] ap_phi_reg_pp0_iter0_tmp_V_1_6_reg_344;
reg   [7:0] ap_phi_reg_pp0_iter1_tmp_V_1_6_reg_344;
wire   [7:0] ap_phi_reg_pp0_iter0_tmp_V_6_reg_354;
reg   [7:0] ap_phi_reg_pp0_iter1_tmp_V_6_reg_354;
reg   [7:0] ap_phi_mux_tmp_V_1_7_phi_fu_367_p4;
wire   [7:0] ap_phi_reg_pp0_iter0_tmp_V_1_7_reg_364;
reg   [7:0] ap_phi_reg_pp0_iter1_tmp_V_1_7_reg_364;
reg   [7:0] ap_phi_mux_tmp_V_7_phi_fu_377_p4;
wire   [7:0] ap_phi_reg_pp0_iter0_tmp_V_7_reg_374;
reg   [7:0] ap_phi_reg_pp0_iter1_tmp_V_7_reg_374;
reg   [11:0] x_fu_90;
wire    ap_loop_init;
reg   [11:0] ap_sig_allocacmp_x_1;
wire   [11:0] x_2_fu_441_p2;
reg   [7:0] empty_100_fu_94;
reg   [7:0] empty_101_fu_98;
reg    ap_block_pp0_stage1_01001;
reg    ap_block_pp0_stage2_01001;
wire   [12:0] zext_ln483_fu_447_p1;
wire  signed [12:0] sub25_cast21_cast_fu_413_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [7:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_706;
reg    ap_condition_709;
reg    ap_condition_713;
reg    ap_condition_717;
reg    ap_condition_720;
reg    ap_condition_723;
reg    ap_condition_726;
reg    ap_condition_729;
reg    ap_condition_732;
reg    ap_condition_735;
reg    ap_condition_414;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

h264_v_frmbuf_wr_0_0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln483_reg_648 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_709)) begin
            ap_phi_reg_pp0_iter0_tmp_V_0_reg_224 <= empty_100_fu_94;
        end else if ((1'b1 == ap_condition_706)) begin
            ap_phi_reg_pp0_iter0_tmp_V_0_reg_224 <= trunc_ln145_fu_468_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln483_reg_648 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_717)) begin
            ap_phi_reg_pp0_iter0_tmp_V_18_reg_245 <= ap_phi_reg_pp0_iter0_tmp_V_0_reg_224;
        end else if ((1'b1 == ap_condition_713)) begin
            ap_phi_reg_pp0_iter0_tmp_V_18_reg_245 <= trunc_ln145_2_fu_484_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln483_reg_648 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_709)) begin
            ap_phi_reg_pp0_iter0_tmp_V_1_0_reg_214 <= empty_101_fu_98;
        end else if ((1'b1 == ap_condition_706)) begin
            ap_phi_reg_pp0_iter0_tmp_V_1_0_reg_214 <= {{img_dout[15:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln483_reg_648 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_717)) begin
            ap_phi_reg_pp0_iter0_tmp_V_1_1_reg_234 <= ap_phi_reg_pp0_iter0_tmp_V_1_0_reg_214;
        end else if ((1'b1 == ap_condition_713)) begin
            ap_phi_reg_pp0_iter0_tmp_V_1_1_reg_234 <= {{img_dout[15:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln483_reg_648 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_723)) begin
            ap_phi_reg_pp0_iter0_tmp_V_1_2_reg_256 <= ap_phi_reg_pp0_iter0_tmp_V_1_1_reg_234;
        end else if ((1'b1 == ap_condition_720)) begin
            ap_phi_reg_pp0_iter0_tmp_V_1_2_reg_256 <= {{img_dout[15:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln483_reg_648 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_729)) begin
            ap_phi_reg_pp0_iter0_tmp_V_1_3_reg_278 <= ap_phi_reg_pp0_iter0_tmp_V_1_2_reg_256;
        end else if ((1'b1 == ap_condition_726)) begin
            ap_phi_reg_pp0_iter0_tmp_V_1_3_reg_278 <= {{img_dout[15:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln483_reg_648 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_735)) begin
            ap_phi_reg_pp0_iter0_tmp_V_1_4_reg_300 <= ap_phi_reg_pp0_iter0_tmp_V_1_3_reg_278;
        end else if ((1'b1 == ap_condition_732)) begin
            ap_phi_reg_pp0_iter0_tmp_V_1_4_reg_300 <= {{img_dout[15:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln483_reg_648 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_723)) begin
            ap_phi_reg_pp0_iter0_tmp_V_2_reg_267 <= ap_phi_reg_pp0_iter0_tmp_V_18_reg_245;
        end else if ((1'b1 == ap_condition_720)) begin
            ap_phi_reg_pp0_iter0_tmp_V_2_reg_267 <= trunc_ln145_3_fu_492_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln483_reg_648 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_729)) begin
            ap_phi_reg_pp0_iter0_tmp_V_3_reg_289 <= ap_phi_reg_pp0_iter0_tmp_V_2_reg_267;
        end else if ((1'b1 == ap_condition_726)) begin
            ap_phi_reg_pp0_iter0_tmp_V_3_reg_289 <= trunc_ln145_4_fu_500_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln483_reg_648 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_735)) begin
            ap_phi_reg_pp0_iter0_tmp_V_4_reg_311 <= ap_phi_reg_pp0_iter0_tmp_V_3_reg_289;
        end else if ((1'b1 == ap_condition_732)) begin
            ap_phi_reg_pp0_iter0_tmp_V_4_reg_311 <= trunc_ln145_6_fu_520_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_414)) begin
        if (((icmp_ln483_reg_648 == 1'd0) & (or_ln488_5_reg_713 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_tmp_V_1_5_reg_322 <= ap_phi_reg_pp0_iter0_tmp_V_1_4_reg_300;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_V_1_5_reg_322 <= ap_phi_reg_pp0_iter0_tmp_V_1_5_reg_322;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln488_6_reg_717 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln483_reg_648 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_tmp_V_1_6_reg_344 <= ap_phi_reg_pp0_iter1_tmp_V_1_5_reg_322;
    end else if (((or_ln488_6_reg_717 == 1'd1) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln483_reg_648 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_tmp_V_1_6_reg_344 <= {{img_dout[15:8]}};
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_tmp_V_1_6_reg_344 <= ap_phi_reg_pp0_iter0_tmp_V_1_6_reg_344;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln483_reg_648 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln488_7_reg_721 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_tmp_V_1_7_reg_364 <= {{img_dout[15:8]}};
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_tmp_V_1_7_reg_364 <= ap_phi_reg_pp0_iter0_tmp_V_1_7_reg_364;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_414)) begin
        if (((icmp_ln483_reg_648 == 1'd0) & (or_ln488_5_reg_713 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_tmp_V_5_reg_333 <= ap_phi_reg_pp0_iter0_tmp_V_4_reg_311;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_V_5_reg_333 <= ap_phi_reg_pp0_iter0_tmp_V_5_reg_333;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln488_6_reg_717 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln483_reg_648 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_tmp_V_6_reg_354 <= ap_phi_reg_pp0_iter1_tmp_V_5_reg_333;
    end else if (((or_ln488_6_reg_717 == 1'd1) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln483_reg_648 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_tmp_V_6_reg_354 <= trunc_ln145_11_fu_528_p1;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_tmp_V_6_reg_354 <= ap_phi_reg_pp0_iter0_tmp_V_6_reg_354;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln483_reg_648 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln488_7_reg_721 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_tmp_V_7_reg_374 <= trunc_ln145_13_fu_532_p1;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_tmp_V_7_reg_374 <= ap_phi_reg_pp0_iter0_tmp_V_7_reg_374;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_100_fu_94 <= empty;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        empty_100_fu_94 <= ap_phi_mux_tmp_V_7_phi_fu_377_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_101_fu_98 <= empty_47;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        empty_101_fu_98 <= ap_phi_mux_tmp_V_1_7_phi_fu_367_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln483_fu_435_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            x_fu_90 <= x_2_fu_441_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            x_fu_90 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln483_reg_648 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (or_ln488_5_reg_713 == 1'd1))) begin
        ap_phi_reg_pp0_iter0_tmp_V_1_5_reg_322 <= {{img_dout[15:8]}};
        ap_phi_reg_pp0_iter0_tmp_V_5_reg_333 <= trunc_ln145_8_fu_524_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln483_fu_435_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cmp26_reg_652 <= cmp26_fu_451_p2;
        or_ln488_reg_663 <= or_ln488_fu_457_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln483_reg_648 <= icmp_ln483_fu_435_p2;
        icmp_ln483_reg_648_pp0_iter1_reg <= icmp_ln483_reg_648;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln483_reg_648 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        or_ln488_1_reg_672 <= or_ln488_1_fu_472_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln483_reg_648 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        or_ln488_2_reg_691 <= or_ln488_2_fu_488_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln483_reg_648 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        or_ln488_3_reg_700 <= or_ln488_3_fu_496_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln483_reg_648 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        or_ln488_4_reg_709 <= or_ln488_4_fu_504_p2;
        or_ln488_5_reg_713 <= or_ln488_5_fu_508_p2;
        or_ln488_6_reg_717 <= or_ln488_6_fu_512_p2;
        or_ln488_7_reg_721 <= or_ln488_7_fu_516_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_V_0_reg_224 <= ap_phi_reg_pp0_iter0_tmp_V_0_reg_224;
        tmp_V_1_0_reg_214 <= ap_phi_reg_pp0_iter0_tmp_V_1_0_reg_214;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_V_18_reg_245 <= ap_phi_reg_pp0_iter0_tmp_V_18_reg_245;
        tmp_V_1_1_reg_234 <= ap_phi_reg_pp0_iter0_tmp_V_1_1_reg_234;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp_V_1_2_reg_256 <= ap_phi_reg_pp0_iter0_tmp_V_1_2_reg_256;
        tmp_V_2_reg_267 <= ap_phi_reg_pp0_iter0_tmp_V_2_reg_267;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        tmp_V_1_3_reg_278 <= ap_phi_reg_pp0_iter0_tmp_V_1_3_reg_278;
        tmp_V_3_reg_289 <= ap_phi_reg_pp0_iter0_tmp_V_3_reg_289;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        tmp_V_1_4_reg_300 <= ap_phi_reg_pp0_iter0_tmp_V_1_4_reg_300;
        tmp_V_4_reg_311 <= ap_phi_reg_pp0_iter0_tmp_V_4_reg_311;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_V_1_5_reg_322 <= ap_phi_reg_pp0_iter1_tmp_V_1_5_reg_322;
        tmp_V_5_reg_333 <= ap_phi_reg_pp0_iter1_tmp_V_5_reg_333;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (icmp_ln483_reg_648 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln483_reg_648_pp0_iter1_reg == 1'd0) & (or_ln488_7_reg_721 == 1'd0))) begin
        ap_phi_mux_tmp_V_1_7_phi_fu_367_p4 = ap_phi_reg_pp0_iter1_tmp_V_1_6_reg_344;
    end else begin
        ap_phi_mux_tmp_V_1_7_phi_fu_367_p4 = ap_phi_reg_pp0_iter1_tmp_V_1_7_reg_364;
    end
end

always @ (*) begin
    if (((icmp_ln483_reg_648_pp0_iter1_reg == 1'd0) & (or_ln488_7_reg_721 == 1'd0))) begin
        ap_phi_mux_tmp_V_7_phi_fu_377_p4 = ap_phi_reg_pp0_iter1_tmp_V_6_reg_354;
    end else begin
        ap_phi_mux_tmp_V_7_phi_fu_377_p4 = ap_phi_reg_pp0_iter1_tmp_V_7_reg_374;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_x_1 = 12'd0;
    end else begin
        ap_sig_allocacmp_x_1 = x_fu_90;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bytePlanes_01_blk_n = bytePlanes_01_full_n;
    end else begin
        bytePlanes_01_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bytePlanes_01_write = 1'b1;
    end else begin
        bytePlanes_01_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (demorgan == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bytePlanes_12_blk_n = bytePlanes_12_full_n;
    end else begin
        bytePlanes_12_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (demorgan == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bytePlanes_12_write = 1'b1;
    end else begin
        bytePlanes_12_write = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op100_read_state8 == 1'b1) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage0) & (icmp_ln483_reg_648 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln488_7_reg_721 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6) & (icmp_ln483_reg_648 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (or_ln488_5_reg_713 == 1'd1)) | ((1'b0 == ap_block_pp0_stage5) & (icmp_ln483_reg_648 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (or_ln488_4_reg_709 == 1'd1)) | ((1'b0 == ap_block_pp0_stage4) & (icmp_ln483_reg_648 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (or_ln488_3_reg_700 == 1'd1)) | ((1'b0 == ap_block_pp0_stage3) & (icmp_ln483_reg_648 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (or_ln488_2_reg_691 == 1'd1)) | ((1'b0 == ap_block_pp0_stage2) & (ap_predicate_op59_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (icmp_ln483_reg_648 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (or_ln488_reg_663 == 1'd1)))) begin
        img_blk_n = img_empty_n;
    end else begin
        img_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op100_read_state8 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_predicate_op93_read_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_predicate_op67_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op107_read_state9 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_predicate_op86_read_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_predicate_op59_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op75_read_state5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op48_read_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        img_read = 1'b1;
    end else begin
        img_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln483_reg_648 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_out1_ap_vld = 1'b1;
    end else begin
        p_out1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln483_reg_648 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_out_ap_vld = 1'b1;
    end else begin
        p_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((img_empty_n == 1'b0) & (ap_predicate_op107_read_state9 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((img_empty_n == 1'b0) & (ap_predicate_op107_read_state9 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = (((img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op48_read_state2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((bytePlanes_01_full_n == 1'b0) | ((demorgan == 1'd0) & (bytePlanes_12_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op48_read_state2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((bytePlanes_01_full_n == 1'b0) | ((demorgan == 1'd0) & (bytePlanes_12_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op48_read_state2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((bytePlanes_01_full_n == 1'b0) | ((demorgan == 1'd0) & (bytePlanes_12_full_n == 1'b0)))));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = ((ap_predicate_op59_read_state3 == 1'b1) & (img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_predicate_op59_read_state3 == 1'b1) & (img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_predicate_op59_read_state3 == 1'b1) & (img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((img_empty_n == 1'b0) & (ap_predicate_op67_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((img_empty_n == 1'b0) & (ap_predicate_op67_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op75_read_state5 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op75_read_state5 == 1'b1));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((img_empty_n == 1'b0) & (ap_predicate_op86_read_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((img_empty_n == 1'b0) & (ap_predicate_op86_read_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((img_empty_n == 1'b0) & (ap_predicate_op93_read_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((img_empty_n == 1'b0) & (ap_predicate_op93_read_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((ap_predicate_op100_read_state8 == 1'b1) & (img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((ap_predicate_op100_read_state8 == 1'b1) & (img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_state10_pp0_stage1_iter1 = ((bytePlanes_01_full_n == 1'b0) | ((demorgan == 1'd0) & (bytePlanes_12_full_n == 1'b0)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op48_read_state2 == 1'b1));
end

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = ((ap_predicate_op59_read_state3 == 1'b1) & (img_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage3_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op67_read_state4 == 1'b1));
end

always @ (*) begin
    ap_block_state5_pp0_stage4_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op75_read_state5 == 1'b1));
end

always @ (*) begin
    ap_block_state6_pp0_stage5_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op86_read_state6 == 1'b1));
end

always @ (*) begin
    ap_block_state7_pp0_stage6_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op93_read_state7 == 1'b1));
end

always @ (*) begin
    ap_block_state8_pp0_stage7_iter0 = ((ap_predicate_op100_read_state8 == 1'b1) & (img_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state9_pp0_stage0_iter1 = ((img_empty_n == 1'b0) & (ap_predicate_op107_read_state9 == 1'b1));
end

always @ (*) begin
    ap_condition_414 = ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7));
end

always @ (*) begin
    ap_condition_706 = ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (or_ln488_reg_663 == 1'd1));
end

always @ (*) begin
    ap_condition_709 = ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (or_ln488_reg_663 == 1'd0));
end

always @ (*) begin
    ap_condition_713 = ((1'b0 == ap_block_pp0_stage2_11001) & (or_ln488_1_reg_672 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2));
end

always @ (*) begin
    ap_condition_717 = ((1'b0 == ap_block_pp0_stage3_11001) & (or_ln488_1_reg_672 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3));
end

always @ (*) begin
    ap_condition_720 = ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (or_ln488_2_reg_691 == 1'd1));
end

always @ (*) begin
    ap_condition_723 = ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (or_ln488_2_reg_691 == 1'd0));
end

always @ (*) begin
    ap_condition_726 = ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (or_ln488_3_reg_700 == 1'd1));
end

always @ (*) begin
    ap_condition_729 = ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (or_ln488_3_reg_700 == 1'd0));
end

always @ (*) begin
    ap_condition_732 = ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (or_ln488_4_reg_709 == 1'd1));
end

always @ (*) begin
    ap_condition_735 = ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (or_ln488_4_reg_709 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign ap_phi_reg_pp0_iter0_tmp_V_1_6_reg_344 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_V_1_7_reg_364 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_V_6_reg_354 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_V_7_reg_374 = 'bx;

always @ (*) begin
    ap_predicate_op100_read_state8 = ((or_ln488_6_reg_717 == 1'd1) & (icmp_ln483_reg_648 == 1'd0));
end

always @ (*) begin
    ap_predicate_op107_read_state9 = ((icmp_ln483_reg_648 == 1'd0) & (or_ln488_7_reg_721 == 1'd1));
end

always @ (*) begin
    ap_predicate_op48_read_state2 = ((icmp_ln483_reg_648 == 1'd0) & (or_ln488_reg_663 == 1'd1));
end

always @ (*) begin
    ap_predicate_op59_read_state3 = ((or_ln488_1_reg_672 == 1'd1) & (icmp_ln483_reg_648 == 1'd0));
end

always @ (*) begin
    ap_predicate_op67_read_state4 = ((icmp_ln483_reg_648 == 1'd0) & (or_ln488_2_reg_691 == 1'd1));
end

always @ (*) begin
    ap_predicate_op75_read_state5 = ((icmp_ln483_reg_648 == 1'd0) & (or_ln488_3_reg_700 == 1'd1));
end

always @ (*) begin
    ap_predicate_op86_read_state6 = ((icmp_ln483_reg_648 == 1'd0) & (or_ln488_4_reg_709 == 1'd1));
end

always @ (*) begin
    ap_predicate_op93_read_state7 = ((icmp_ln483_reg_648 == 1'd0) & (or_ln488_5_reg_713 == 1'd1));
end

assign bytePlanes_01_din = {{{{{{{{ap_phi_mux_tmp_V_7_phi_fu_377_p4}, {ap_phi_reg_pp0_iter1_tmp_V_6_reg_354}}, {tmp_V_5_reg_333}}, {tmp_V_4_reg_311}}, {tmp_V_3_reg_289}}, {tmp_V_2_reg_267}}, {tmp_V_18_reg_245}}, {tmp_V_0_reg_224}};

assign bytePlanes_12_din = {{{{{{{{ap_phi_mux_tmp_V_1_7_phi_fu_367_p4}, {ap_phi_reg_pp0_iter1_tmp_V_1_6_reg_344}}, {tmp_V_1_5_reg_322}}, {tmp_V_1_4_reg_300}}, {tmp_V_1_3_reg_278}}, {tmp_V_1_2_reg_256}}, {tmp_V_1_1_reg_234}}, {tmp_V_1_0_reg_214}};

assign cmp26_fu_451_p2 = (($signed(zext_ln483_fu_447_p1) < $signed(sub25_cast21_cast_fu_413_p1)) ? 1'b1 : 1'b0);

assign icmp_ln483_fu_435_p2 = ((ap_sig_allocacmp_x_1 == trunc_ln470_2) ? 1'b1 : 1'b0);

assign or_ln488_1_fu_472_p2 = (icmp_ln488_1 | cmp26_reg_652);

assign or_ln488_2_fu_488_p2 = (icmp_ln488_2 | cmp26_reg_652);

assign or_ln488_3_fu_496_p2 = (icmp_ln488_3 | cmp26_reg_652);

assign or_ln488_4_fu_504_p2 = (icmp_ln488_4 | cmp26_reg_652);

assign or_ln488_5_fu_508_p2 = (icmp_ln488_5 | cmp26_reg_652);

assign or_ln488_6_fu_512_p2 = (icmp_ln488_6 | cmp26_reg_652);

assign or_ln488_7_fu_516_p2 = (icmp_ln473 | cmp26_reg_652);

assign or_ln488_fu_457_p2 = (icmp_ln488 | cmp26_fu_451_p2);

assign p_out = empty_101_fu_98;

assign p_out1 = empty_100_fu_94;

assign sub25_cast21_cast_fu_413_p1 = $signed(sub25_cast21);

assign trunc_ln145_11_fu_528_p1 = img_dout[7:0];

assign trunc_ln145_13_fu_532_p1 = img_dout[7:0];

assign trunc_ln145_2_fu_484_p1 = img_dout[7:0];

assign trunc_ln145_3_fu_492_p1 = img_dout[7:0];

assign trunc_ln145_4_fu_500_p1 = img_dout[7:0];

assign trunc_ln145_6_fu_520_p1 = img_dout[7:0];

assign trunc_ln145_8_fu_524_p1 = img_dout[7:0];

assign trunc_ln145_fu_468_p1 = img_dout[7:0];

assign x_2_fu_441_p2 = (ap_sig_allocacmp_x_1 + 12'd1);

assign zext_ln483_fu_447_p1 = ap_sig_allocacmp_x_1;

endmodule //h264_v_frmbuf_wr_0_0_MultiPixStream2Bytes_Pipeline_VITIS_LOOP_483_1
